syntax = "proto3";
package limit.event.sync;

import "event.proto";
import "auth.proto";

enum EventType {
    MESSAGE = 1;
}

message SynchronizeRequest {
    // auth
    limit.auth.Auth token = 1;
    // target subscriber
    string subscription = 2;
    oneof starting_point {
        // synchronization start timestamp
        // the default is now
        int64 timestamp = 3;
        // the ID of the event to start synchronization
        string event_id = 4;
    }
    // offset for synchronization
    // the default is +50 (49 events backwards from the starting point)
    sint32 offset = 5;
    // returns all type of events if not specified
    EventType event_type = 6;
}

message SynchronizeResponse {
    repeated limit.event.Event events = 1;
}

service SynchronizeService {
    rpc Synchronize(SynchronizeRequest) returns (SynchronizeResponse);
}
