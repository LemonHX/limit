syntax = "proto3";
package limit.message;

import "google/protobuf/any.proto";
import "auth.proto";

message MessageReceiver {

}

message Message {
    // uuid of the message
    // better uuid v7 for sql better performance
    // could only be empty for sender
    string message_id = 1;
    // sent time of the message
    int64 timestamp = 2;
    // sender uuid of the message
    string sender = 3;
    // receiver uuid of the message
    string receiver_id = 4;
    string receiver_server = 5;
    // text should be encrypted
    // if using v1 or v2 version text could be empty
    string text = 6;

    map<string, string> extensions = 7;
}

message ReceiveMessagesRequest {
    // auth
    limit.auth.Auth token = 1;

    // TODO: specify subscription channel
    // string subscription = 2;
}

message SendMessageRequest {
    // auth
    limit.auth.Auth token = 1;
    // message
    Message message = 2;

    // TODO: specify subscription channel
    // string subscription = 2;
}

message SendMessageResponse {
    // message id
    string message_id = 1;
}

service MessageService {
   // receiving all messages from the server
   rpc ReceiveMessages (ReceiveMessagesRequest) returns (stream Message);
   // sending message to the server
   rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);
}
